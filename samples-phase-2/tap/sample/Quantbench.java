// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Quantbench.proto

package tap.sample;

public final class Quantbench {
  private Quantbench() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CandleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .tap.sample.Timestamp time = 1;
    boolean hasTime();
    tap.sample.Tapfile.Timestamp getTime();
    tap.sample.Tapfile.TimestampOrBuilder getTimeOrBuilder();
    
    // optional .tap.sample.Timestamp expires = 2;
    boolean hasExpires();
    tap.sample.Tapfile.Timestamp getExpires();
    tap.sample.Tapfile.TimestampOrBuilder getExpiresOrBuilder();
    
    // optional .tap.sample.Instrument instrument = 3;
    boolean hasInstrument();
    tap.sample.Tapfile.Instrument getInstrument();
    tap.sample.Tapfile.InstrumentOrBuilder getInstrumentOrBuilder();
    
    // optional string symbol = 4;
    boolean hasSymbol();
    String getSymbol();
    
    // optional double open = 5;
    boolean hasOpen();
    double getOpen();
    
    // optional double high = 6;
    boolean hasHigh();
    double getHigh();
    
    // optional double low = 7;
    boolean hasLow();
    double getLow();
    
    // optional double close = 8;
    boolean hasClose();
    double getClose();
    
    // optional int64 volume = 9;
    boolean hasVolume();
    long getVolume();
    
    // optional int64 trade_count = 10;
    boolean hasTradeCount();
    long getTradeCount();
    
    // optional int64 total_volume = 11;
    boolean hasTotalVolume();
    long getTotalVolume();
    
    // optional double vwap = 12;
    boolean hasVwap();
    double getVwap();
    
    // optional double total_vwap = 13;
    boolean hasTotalVwap();
    double getTotalVwap();
    
    // optional double period_return = 14;
    boolean hasPeriodReturn();
    double getPeriodReturn();
    
    // optional .tap.sample.Currency currency = 15;
    boolean hasCurrency();
    tap.sample.Tapfile.Currency getCurrency();
    tap.sample.Tapfile.CurrencyOrBuilder getCurrencyOrBuilder();
  }
  public static final class Candle extends
      com.google.protobuf.GeneratedMessage
      implements CandleOrBuilder {
    // Use Candle.newBuilder() to construct.
    private Candle(Builder builder) {
      super(builder);
    }
    private Candle(boolean noInit) {}
    
    private static final Candle defaultInstance;
    public static Candle getDefaultInstance() {
      return defaultInstance;
    }
    
    public Candle getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tap.sample.Quantbench.internal_static_tap_sample_Candle_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tap.sample.Quantbench.internal_static_tap_sample_Candle_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .tap.sample.Timestamp time = 1;
    public static final int TIME_FIELD_NUMBER = 1;
    private tap.sample.Tapfile.Timestamp time_;
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public tap.sample.Tapfile.Timestamp getTime() {
      return time_;
    }
    public tap.sample.Tapfile.TimestampOrBuilder getTimeOrBuilder() {
      return time_;
    }
    
    // optional .tap.sample.Timestamp expires = 2;
    public static final int EXPIRES_FIELD_NUMBER = 2;
    private tap.sample.Tapfile.Timestamp expires_;
    public boolean hasExpires() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public tap.sample.Tapfile.Timestamp getExpires() {
      return expires_;
    }
    public tap.sample.Tapfile.TimestampOrBuilder getExpiresOrBuilder() {
      return expires_;
    }
    
    // optional .tap.sample.Instrument instrument = 3;
    public static final int INSTRUMENT_FIELD_NUMBER = 3;
    private tap.sample.Tapfile.Instrument instrument_;
    public boolean hasInstrument() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public tap.sample.Tapfile.Instrument getInstrument() {
      return instrument_;
    }
    public tap.sample.Tapfile.InstrumentOrBuilder getInstrumentOrBuilder() {
      return instrument_;
    }
    
    // optional string symbol = 4;
    public static final int SYMBOL_FIELD_NUMBER = 4;
    private java.lang.Object symbol_;
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          symbol_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional double open = 5;
    public static final int OPEN_FIELD_NUMBER = 5;
    private double open_;
    public boolean hasOpen() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public double getOpen() {
      return open_;
    }
    
    // optional double high = 6;
    public static final int HIGH_FIELD_NUMBER = 6;
    private double high_;
    public boolean hasHigh() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public double getHigh() {
      return high_;
    }
    
    // optional double low = 7;
    public static final int LOW_FIELD_NUMBER = 7;
    private double low_;
    public boolean hasLow() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public double getLow() {
      return low_;
    }
    
    // optional double close = 8;
    public static final int CLOSE_FIELD_NUMBER = 8;
    private double close_;
    public boolean hasClose() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public double getClose() {
      return close_;
    }
    
    // optional int64 volume = 9;
    public static final int VOLUME_FIELD_NUMBER = 9;
    private long volume_;
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public long getVolume() {
      return volume_;
    }
    
    // optional int64 trade_count = 10;
    public static final int TRADE_COUNT_FIELD_NUMBER = 10;
    private long tradeCount_;
    public boolean hasTradeCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public long getTradeCount() {
      return tradeCount_;
    }
    
    // optional int64 total_volume = 11;
    public static final int TOTAL_VOLUME_FIELD_NUMBER = 11;
    private long totalVolume_;
    public boolean hasTotalVolume() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public long getTotalVolume() {
      return totalVolume_;
    }
    
    // optional double vwap = 12;
    public static final int VWAP_FIELD_NUMBER = 12;
    private double vwap_;
    public boolean hasVwap() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public double getVwap() {
      return vwap_;
    }
    
    // optional double total_vwap = 13;
    public static final int TOTAL_VWAP_FIELD_NUMBER = 13;
    private double totalVwap_;
    public boolean hasTotalVwap() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public double getTotalVwap() {
      return totalVwap_;
    }
    
    // optional double period_return = 14;
    public static final int PERIOD_RETURN_FIELD_NUMBER = 14;
    private double periodReturn_;
    public boolean hasPeriodReturn() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public double getPeriodReturn() {
      return periodReturn_;
    }
    
    // optional .tap.sample.Currency currency = 15;
    public static final int CURRENCY_FIELD_NUMBER = 15;
    private tap.sample.Tapfile.Currency currency_;
    public boolean hasCurrency() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public tap.sample.Tapfile.Currency getCurrency() {
      return currency_;
    }
    public tap.sample.Tapfile.CurrencyOrBuilder getCurrencyOrBuilder() {
      return currency_;
    }
    
    private void initFields() {
      time_ = tap.sample.Tapfile.Timestamp.getDefaultInstance();
      expires_ = tap.sample.Tapfile.Timestamp.getDefaultInstance();
      instrument_ = tap.sample.Tapfile.Instrument.getDefaultInstance();
      symbol_ = "";
      open_ = 0D;
      high_ = 0D;
      low_ = 0D;
      close_ = 0D;
      volume_ = 0L;
      tradeCount_ = 0L;
      totalVolume_ = 0L;
      vwap_ = 0D;
      totalVwap_ = 0D;
      periodReturn_ = 0D;
      currency_ = tap.sample.Tapfile.Currency.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, expires_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, instrument_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, open_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, high_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, low_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, close_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(9, volume_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(10, tradeCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt64(11, totalVolume_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, vwap_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, totalVwap_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, periodReturn_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(15, currency_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, expires_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, instrument_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, open_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, high_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, low_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, close_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, volume_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, tradeCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, totalVolume_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, vwap_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, totalVwap_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, periodReturn_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, currency_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static tap.sample.Quantbench.Candle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static tap.sample.Quantbench.Candle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static tap.sample.Quantbench.Candle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static tap.sample.Quantbench.Candle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static tap.sample.Quantbench.Candle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static tap.sample.Quantbench.Candle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static tap.sample.Quantbench.Candle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static tap.sample.Quantbench.Candle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static tap.sample.Quantbench.Candle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static tap.sample.Quantbench.Candle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(tap.sample.Quantbench.Candle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements tap.sample.Quantbench.CandleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tap.sample.Quantbench.internal_static_tap_sample_Candle_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tap.sample.Quantbench.internal_static_tap_sample_Candle_fieldAccessorTable;
      }
      
      // Construct using tap.sample.Quantbench.Candle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTimeFieldBuilder();
          getExpiresFieldBuilder();
          getInstrumentFieldBuilder();
          getCurrencyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (timeBuilder_ == null) {
          time_ = tap.sample.Tapfile.Timestamp.getDefaultInstance();
        } else {
          timeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (expiresBuilder_ == null) {
          expires_ = tap.sample.Tapfile.Timestamp.getDefaultInstance();
        } else {
          expiresBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (instrumentBuilder_ == null) {
          instrument_ = tap.sample.Tapfile.Instrument.getDefaultInstance();
        } else {
          instrumentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        open_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        high_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        low_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        close_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        volume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        tradeCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        totalVolume_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        vwap_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        totalVwap_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        periodReturn_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        if (currencyBuilder_ == null) {
          currency_ = tap.sample.Tapfile.Currency.getDefaultInstance();
        } else {
          currencyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tap.sample.Quantbench.Candle.getDescriptor();
      }
      
      public tap.sample.Quantbench.Candle getDefaultInstanceForType() {
        return tap.sample.Quantbench.Candle.getDefaultInstance();
      }
      
      public tap.sample.Quantbench.Candle build() {
        tap.sample.Quantbench.Candle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private tap.sample.Quantbench.Candle buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        tap.sample.Quantbench.Candle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public tap.sample.Quantbench.Candle buildPartial() {
        tap.sample.Quantbench.Candle result = new tap.sample.Quantbench.Candle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (timeBuilder_ == null) {
          result.time_ = time_;
        } else {
          result.time_ = timeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (expiresBuilder_ == null) {
          result.expires_ = expires_;
        } else {
          result.expires_ = expiresBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (instrumentBuilder_ == null) {
          result.instrument_ = instrument_;
        } else {
          result.instrument_ = instrumentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.open_ = open_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.high_ = high_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.low_ = low_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.close_ = close_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tradeCount_ = tradeCount_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.totalVolume_ = totalVolume_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.vwap_ = vwap_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.totalVwap_ = totalVwap_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.periodReturn_ = periodReturn_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (currencyBuilder_ == null) {
          result.currency_ = currency_;
        } else {
          result.currency_ = currencyBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tap.sample.Quantbench.Candle) {
          return mergeFrom((tap.sample.Quantbench.Candle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(tap.sample.Quantbench.Candle other) {
        if (other == tap.sample.Quantbench.Candle.getDefaultInstance()) return this;
        if (other.hasTime()) {
          mergeTime(other.getTime());
        }
        if (other.hasExpires()) {
          mergeExpires(other.getExpires());
        }
        if (other.hasInstrument()) {
          mergeInstrument(other.getInstrument());
        }
        if (other.hasSymbol()) {
          setSymbol(other.getSymbol());
        }
        if (other.hasOpen()) {
          setOpen(other.getOpen());
        }
        if (other.hasHigh()) {
          setHigh(other.getHigh());
        }
        if (other.hasLow()) {
          setLow(other.getLow());
        }
        if (other.hasClose()) {
          setClose(other.getClose());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasTradeCount()) {
          setTradeCount(other.getTradeCount());
        }
        if (other.hasTotalVolume()) {
          setTotalVolume(other.getTotalVolume());
        }
        if (other.hasVwap()) {
          setVwap(other.getVwap());
        }
        if (other.hasTotalVwap()) {
          setTotalVwap(other.getTotalVwap());
        }
        if (other.hasPeriodReturn()) {
          setPeriodReturn(other.getPeriodReturn());
        }
        if (other.hasCurrency()) {
          mergeCurrency(other.getCurrency());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              tap.sample.Tapfile.Timestamp.Builder subBuilder = tap.sample.Tapfile.Timestamp.newBuilder();
              if (hasTime()) {
                subBuilder.mergeFrom(getTime());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTime(subBuilder.buildPartial());
              break;
            }
            case 18: {
              tap.sample.Tapfile.Timestamp.Builder subBuilder = tap.sample.Tapfile.Timestamp.newBuilder();
              if (hasExpires()) {
                subBuilder.mergeFrom(getExpires());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setExpires(subBuilder.buildPartial());
              break;
            }
            case 26: {
              tap.sample.Tapfile.Instrument.Builder subBuilder = tap.sample.Tapfile.Instrument.newBuilder();
              if (hasInstrument()) {
                subBuilder.mergeFrom(getInstrument());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInstrument(subBuilder.buildPartial());
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              symbol_ = input.readBytes();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              open_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              high_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              low_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              close_ = input.readDouble();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              volume_ = input.readInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              tradeCount_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              totalVolume_ = input.readInt64();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              vwap_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              totalVwap_ = input.readDouble();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              periodReturn_ = input.readDouble();
              break;
            }
            case 122: {
              tap.sample.Tapfile.Currency.Builder subBuilder = tap.sample.Tapfile.Currency.newBuilder();
              if (hasCurrency()) {
                subBuilder.mergeFrom(getCurrency());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCurrency(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .tap.sample.Timestamp time = 1;
      private tap.sample.Tapfile.Timestamp time_ = tap.sample.Tapfile.Timestamp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          tap.sample.Tapfile.Timestamp, tap.sample.Tapfile.Timestamp.Builder, tap.sample.Tapfile.TimestampOrBuilder> timeBuilder_;
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public tap.sample.Tapfile.Timestamp getTime() {
        if (timeBuilder_ == null) {
          return time_;
        } else {
          return timeBuilder_.getMessage();
        }
      }
      public Builder setTime(tap.sample.Tapfile.Timestamp value) {
        if (timeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          time_ = value;
          onChanged();
        } else {
          timeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setTime(
          tap.sample.Tapfile.Timestamp.Builder builderForValue) {
        if (timeBuilder_ == null) {
          time_ = builderForValue.build();
          onChanged();
        } else {
          timeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeTime(tap.sample.Tapfile.Timestamp value) {
        if (timeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              time_ != tap.sample.Tapfile.Timestamp.getDefaultInstance()) {
            time_ =
              tap.sample.Tapfile.Timestamp.newBuilder(time_).mergeFrom(value).buildPartial();
          } else {
            time_ = value;
          }
          onChanged();
        } else {
          timeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearTime() {
        if (timeBuilder_ == null) {
          time_ = tap.sample.Tapfile.Timestamp.getDefaultInstance();
          onChanged();
        } else {
          timeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public tap.sample.Tapfile.Timestamp.Builder getTimeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTimeFieldBuilder().getBuilder();
      }
      public tap.sample.Tapfile.TimestampOrBuilder getTimeOrBuilder() {
        if (timeBuilder_ != null) {
          return timeBuilder_.getMessageOrBuilder();
        } else {
          return time_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          tap.sample.Tapfile.Timestamp, tap.sample.Tapfile.Timestamp.Builder, tap.sample.Tapfile.TimestampOrBuilder> 
          getTimeFieldBuilder() {
        if (timeBuilder_ == null) {
          timeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              tap.sample.Tapfile.Timestamp, tap.sample.Tapfile.Timestamp.Builder, tap.sample.Tapfile.TimestampOrBuilder>(
                  time_,
                  getParentForChildren(),
                  isClean());
          time_ = null;
        }
        return timeBuilder_;
      }
      
      // optional .tap.sample.Timestamp expires = 2;
      private tap.sample.Tapfile.Timestamp expires_ = tap.sample.Tapfile.Timestamp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          tap.sample.Tapfile.Timestamp, tap.sample.Tapfile.Timestamp.Builder, tap.sample.Tapfile.TimestampOrBuilder> expiresBuilder_;
      public boolean hasExpires() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public tap.sample.Tapfile.Timestamp getExpires() {
        if (expiresBuilder_ == null) {
          return expires_;
        } else {
          return expiresBuilder_.getMessage();
        }
      }
      public Builder setExpires(tap.sample.Tapfile.Timestamp value) {
        if (expiresBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          expires_ = value;
          onChanged();
        } else {
          expiresBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setExpires(
          tap.sample.Tapfile.Timestamp.Builder builderForValue) {
        if (expiresBuilder_ == null) {
          expires_ = builderForValue.build();
          onChanged();
        } else {
          expiresBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeExpires(tap.sample.Tapfile.Timestamp value) {
        if (expiresBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              expires_ != tap.sample.Tapfile.Timestamp.getDefaultInstance()) {
            expires_ =
              tap.sample.Tapfile.Timestamp.newBuilder(expires_).mergeFrom(value).buildPartial();
          } else {
            expires_ = value;
          }
          onChanged();
        } else {
          expiresBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearExpires() {
        if (expiresBuilder_ == null) {
          expires_ = tap.sample.Tapfile.Timestamp.getDefaultInstance();
          onChanged();
        } else {
          expiresBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public tap.sample.Tapfile.Timestamp.Builder getExpiresBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getExpiresFieldBuilder().getBuilder();
      }
      public tap.sample.Tapfile.TimestampOrBuilder getExpiresOrBuilder() {
        if (expiresBuilder_ != null) {
          return expiresBuilder_.getMessageOrBuilder();
        } else {
          return expires_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          tap.sample.Tapfile.Timestamp, tap.sample.Tapfile.Timestamp.Builder, tap.sample.Tapfile.TimestampOrBuilder> 
          getExpiresFieldBuilder() {
        if (expiresBuilder_ == null) {
          expiresBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              tap.sample.Tapfile.Timestamp, tap.sample.Tapfile.Timestamp.Builder, tap.sample.Tapfile.TimestampOrBuilder>(
                  expires_,
                  getParentForChildren(),
                  isClean());
          expires_ = null;
        }
        return expiresBuilder_;
      }
      
      // optional .tap.sample.Instrument instrument = 3;
      private tap.sample.Tapfile.Instrument instrument_ = tap.sample.Tapfile.Instrument.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          tap.sample.Tapfile.Instrument, tap.sample.Tapfile.Instrument.Builder, tap.sample.Tapfile.InstrumentOrBuilder> instrumentBuilder_;
      public boolean hasInstrument() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public tap.sample.Tapfile.Instrument getInstrument() {
        if (instrumentBuilder_ == null) {
          return instrument_;
        } else {
          return instrumentBuilder_.getMessage();
        }
      }
      public Builder setInstrument(tap.sample.Tapfile.Instrument value) {
        if (instrumentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          instrument_ = value;
          onChanged();
        } else {
          instrumentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setInstrument(
          tap.sample.Tapfile.Instrument.Builder builderForValue) {
        if (instrumentBuilder_ == null) {
          instrument_ = builderForValue.build();
          onChanged();
        } else {
          instrumentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeInstrument(tap.sample.Tapfile.Instrument value) {
        if (instrumentBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              instrument_ != tap.sample.Tapfile.Instrument.getDefaultInstance()) {
            instrument_ =
              tap.sample.Tapfile.Instrument.newBuilder(instrument_).mergeFrom(value).buildPartial();
          } else {
            instrument_ = value;
          }
          onChanged();
        } else {
          instrumentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearInstrument() {
        if (instrumentBuilder_ == null) {
          instrument_ = tap.sample.Tapfile.Instrument.getDefaultInstance();
          onChanged();
        } else {
          instrumentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public tap.sample.Tapfile.Instrument.Builder getInstrumentBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getInstrumentFieldBuilder().getBuilder();
      }
      public tap.sample.Tapfile.InstrumentOrBuilder getInstrumentOrBuilder() {
        if (instrumentBuilder_ != null) {
          return instrumentBuilder_.getMessageOrBuilder();
        } else {
          return instrument_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          tap.sample.Tapfile.Instrument, tap.sample.Tapfile.Instrument.Builder, tap.sample.Tapfile.InstrumentOrBuilder> 
          getInstrumentFieldBuilder() {
        if (instrumentBuilder_ == null) {
          instrumentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              tap.sample.Tapfile.Instrument, tap.sample.Tapfile.Instrument.Builder, tap.sample.Tapfile.InstrumentOrBuilder>(
                  instrument_,
                  getParentForChildren(),
                  isClean());
          instrument_ = null;
        }
        return instrumentBuilder_;
      }
      
      // optional string symbol = 4;
      private java.lang.Object symbol_ = "";
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSymbol(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        symbol_ = value;
        onChanged();
        return this;
      }
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000008);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      void setSymbol(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        symbol_ = value;
        onChanged();
      }
      
      // optional double open = 5;
      private double open_ ;
      public boolean hasOpen() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public double getOpen() {
        return open_;
      }
      public Builder setOpen(double value) {
        bitField0_ |= 0x00000010;
        open_ = value;
        onChanged();
        return this;
      }
      public Builder clearOpen() {
        bitField0_ = (bitField0_ & ~0x00000010);
        open_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double high = 6;
      private double high_ ;
      public boolean hasHigh() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public double getHigh() {
        return high_;
      }
      public Builder setHigh(double value) {
        bitField0_ |= 0x00000020;
        high_ = value;
        onChanged();
        return this;
      }
      public Builder clearHigh() {
        bitField0_ = (bitField0_ & ~0x00000020);
        high_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double low = 7;
      private double low_ ;
      public boolean hasLow() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public double getLow() {
        return low_;
      }
      public Builder setLow(double value) {
        bitField0_ |= 0x00000040;
        low_ = value;
        onChanged();
        return this;
      }
      public Builder clearLow() {
        bitField0_ = (bitField0_ & ~0x00000040);
        low_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double close = 8;
      private double close_ ;
      public boolean hasClose() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public double getClose() {
        return close_;
      }
      public Builder setClose(double value) {
        bitField0_ |= 0x00000080;
        close_ = value;
        onChanged();
        return this;
      }
      public Builder clearClose() {
        bitField0_ = (bitField0_ & ~0x00000080);
        close_ = 0D;
        onChanged();
        return this;
      }
      
      // optional int64 volume = 9;
      private long volume_ ;
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public long getVolume() {
        return volume_;
      }
      public Builder setVolume(long value) {
        bitField0_ |= 0x00000100;
        volume_ = value;
        onChanged();
        return this;
      }
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000100);
        volume_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 trade_count = 10;
      private long tradeCount_ ;
      public boolean hasTradeCount() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public long getTradeCount() {
        return tradeCount_;
      }
      public Builder setTradeCount(long value) {
        bitField0_ |= 0x00000200;
        tradeCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearTradeCount() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tradeCount_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 total_volume = 11;
      private long totalVolume_ ;
      public boolean hasTotalVolume() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public long getTotalVolume() {
        return totalVolume_;
      }
      public Builder setTotalVolume(long value) {
        bitField0_ |= 0x00000400;
        totalVolume_ = value;
        onChanged();
        return this;
      }
      public Builder clearTotalVolume() {
        bitField0_ = (bitField0_ & ~0x00000400);
        totalVolume_ = 0L;
        onChanged();
        return this;
      }
      
      // optional double vwap = 12;
      private double vwap_ ;
      public boolean hasVwap() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public double getVwap() {
        return vwap_;
      }
      public Builder setVwap(double value) {
        bitField0_ |= 0x00000800;
        vwap_ = value;
        onChanged();
        return this;
      }
      public Builder clearVwap() {
        bitField0_ = (bitField0_ & ~0x00000800);
        vwap_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double total_vwap = 13;
      private double totalVwap_ ;
      public boolean hasTotalVwap() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public double getTotalVwap() {
        return totalVwap_;
      }
      public Builder setTotalVwap(double value) {
        bitField0_ |= 0x00001000;
        totalVwap_ = value;
        onChanged();
        return this;
      }
      public Builder clearTotalVwap() {
        bitField0_ = (bitField0_ & ~0x00001000);
        totalVwap_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double period_return = 14;
      private double periodReturn_ ;
      public boolean hasPeriodReturn() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public double getPeriodReturn() {
        return periodReturn_;
      }
      public Builder setPeriodReturn(double value) {
        bitField0_ |= 0x00002000;
        periodReturn_ = value;
        onChanged();
        return this;
      }
      public Builder clearPeriodReturn() {
        bitField0_ = (bitField0_ & ~0x00002000);
        periodReturn_ = 0D;
        onChanged();
        return this;
      }
      
      // optional .tap.sample.Currency currency = 15;
      private tap.sample.Tapfile.Currency currency_ = tap.sample.Tapfile.Currency.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          tap.sample.Tapfile.Currency, tap.sample.Tapfile.Currency.Builder, tap.sample.Tapfile.CurrencyOrBuilder> currencyBuilder_;
      public boolean hasCurrency() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public tap.sample.Tapfile.Currency getCurrency() {
        if (currencyBuilder_ == null) {
          return currency_;
        } else {
          return currencyBuilder_.getMessage();
        }
      }
      public Builder setCurrency(tap.sample.Tapfile.Currency value) {
        if (currencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currency_ = value;
          onChanged();
        } else {
          currencyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      public Builder setCurrency(
          tap.sample.Tapfile.Currency.Builder builderForValue) {
        if (currencyBuilder_ == null) {
          currency_ = builderForValue.build();
          onChanged();
        } else {
          currencyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      public Builder mergeCurrency(tap.sample.Tapfile.Currency value) {
        if (currencyBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              currency_ != tap.sample.Tapfile.Currency.getDefaultInstance()) {
            currency_ =
              tap.sample.Tapfile.Currency.newBuilder(currency_).mergeFrom(value).buildPartial();
          } else {
            currency_ = value;
          }
          onChanged();
        } else {
          currencyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      public Builder clearCurrency() {
        if (currencyBuilder_ == null) {
          currency_ = tap.sample.Tapfile.Currency.getDefaultInstance();
          onChanged();
        } else {
          currencyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      public tap.sample.Tapfile.Currency.Builder getCurrencyBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getCurrencyFieldBuilder().getBuilder();
      }
      public tap.sample.Tapfile.CurrencyOrBuilder getCurrencyOrBuilder() {
        if (currencyBuilder_ != null) {
          return currencyBuilder_.getMessageOrBuilder();
        } else {
          return currency_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          tap.sample.Tapfile.Currency, tap.sample.Tapfile.Currency.Builder, tap.sample.Tapfile.CurrencyOrBuilder> 
          getCurrencyFieldBuilder() {
        if (currencyBuilder_ == null) {
          currencyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              tap.sample.Tapfile.Currency, tap.sample.Tapfile.Currency.Builder, tap.sample.Tapfile.CurrencyOrBuilder>(
                  currency_,
                  getParentForChildren(),
                  isClean());
          currency_ = null;
        }
        return currencyBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:tap.sample.Candle)
    }
    
    static {
      defaultInstance = new Candle(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:tap.sample.Candle)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_tap_sample_Candle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tap_sample_Candle_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020Quantbench.proto\022\ntap.sample\032\rTapfile." +
      "proto\"\345\002\n\006Candle\022#\n\004time\030\001 \001(\0132\025.tap.sam" +
      "ple.Timestamp\022&\n\007expires\030\002 \001(\0132\025.tap.sam" +
      "ple.Timestamp\022*\n\ninstrument\030\003 \001(\0132\026.tap." +
      "sample.Instrument\022\016\n\006symbol\030\004 \001(\t\022\014\n\004ope" +
      "n\030\005 \001(\001\022\014\n\004high\030\006 \001(\001\022\013\n\003low\030\007 \001(\001\022\r\n\005cl" +
      "ose\030\010 \001(\001\022\016\n\006volume\030\t \001(\003\022\023\n\013trade_count" +
      "\030\n \001(\003\022\024\n\014total_volume\030\013 \001(\003\022\014\n\004vwap\030\014 \001" +
      "(\001\022\022\n\ntotal_vwap\030\r \001(\001\022\025\n\rperiod_return\030" +
      "\016 \001(\001\022&\n\010currency\030\017 \001(\0132\024.tap.sample.Cur",
      "rency"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_tap_sample_Candle_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_tap_sample_Candle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_tap_sample_Candle_descriptor,
              new java.lang.String[] { "Time", "Expires", "Instrument", "Symbol", "Open", "High", "Low", "Close", "Volume", "TradeCount", "TotalVolume", "Vwap", "TotalVwap", "PeriodReturn", "Currency", },
              tap.sample.Quantbench.Candle.class,
              tap.sample.Quantbench.Candle.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          tap.sample.Tapfile.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
